import Head from 'next/head';
import Link from 'next/link';
import { QueryClient, dehydrate } from '@tanstack/react-query';
import Layout from '@/components/Layout';
import Heading from '@/components/Heading';
import OrderList from '@/components/OrderList';
import { getOrdersFromDB } from '@/lib/api-functions/server/orders/queries';
import { STORAGE_KEY } from '@/lib/tq/orders/settings';
import { Button } from '@/components/mui';
import { useRemoveOrder } from '@/lib/tq/orders/mutations';
import QueryBoundaries from '@/components/QueryBoundary';

export default function AdminOrderList() {
  const removeMutation = useRemoveOrder();

  const removeHandler = (id) => {
    removeMutation.mutate(id);
  };

  return (
    <>
      <Head>
        <title>Commerce App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <Heading component="h2">Orders Admin</Heading>
        <Button component={Link} href="/admin/orders/add">
          Add Order
        </Button>
        <QueryBoundaries>
          <OrderList removeHandler={removeHandler} />
        </QueryBoundaries>
      </Layout>
    </>
  );
}

export const getStaticProps = async () => {
  const Orders = await getOrdersFromDB().catch((err) => console.log(err));
  const queryClient = new QueryClient();

  await queryClient.setQueryData(
    [STORAGE_KEY],
    JSON.parse(JSON.stringify(Orders)),
  );

  return {
    props: {
      dehydratedState: dehydrate(queryClient),
    },
  };
};
